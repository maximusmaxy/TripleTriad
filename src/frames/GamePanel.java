/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import classes.*;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.Timer;

/**
 *
 * @author Max
 */
public class GamePanel extends javax.swing.JPanel implements ActionListener {

    private Timer timer;
    private Game game;
    private Input input;
    private Connection connection;
    
    /**
     * Creates new form GamePanel
     */
    public GamePanel() {
        initComponents();
        
        //panels
        //pnlLogin.setVisible(false);
        pnlRules.setVisible(false);
        pnlCardSelect.setVisible(false);
        pnlRematch.setVisible(false);
        
        //game objects
        input = new Input(this);
        addMouseListener(input);
        connection = new Connection();
        game = new Game(this, input, connection);
        timer = new Timer(16, this);
        timer.start();
    }
    
    public LoginPanel getLogin() {
        return pnlLogin;
    }
    
    public RulesPanel getRules() {
        return pnlRules;
    }
    
    public RematchPanel getRematch() {
        return pnlRematch;
    }
    
    public pnlCardSelect getCardSelect() {
        return pnlCardSelect;
    }

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        game.draw(g2d);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlLogin = new frames.LoginPanel();
        pnlRematch = new frames.RematchPanel();
        pnlRules = new frames.RulesPanel();
        pnlCardSelect = new frames.pnlCardSelect();

        setPreferredSize(new java.awt.Dimension(1200, 675));
        setLayout(null);
        add(pnlLogin);
        pnlLogin.setBounds(400, 220, 396, 246);
        add(pnlRematch);
        pnlRematch.setBounds(340, 220, 522, 140);
        add(pnlRules);
        pnlRules.setBounds(280, 180, 600, 353);
        add(pnlCardSelect);
        pnlCardSelect.setBounds(100, 110, 800, 468);
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public void actionPerformed(ActionEvent e) {
        input.update();
        game.update();
        repaint();
    }
    
    public void sendExit() {
        connection.sendExit();
    }
    
    public void connect(String server, int port, String user, String pass) {
        boolean[] collection = null;
        if (user.isEmpty() && pass.isEmpty()) {
            collection = Loader.fullCollection();
        } else {
        //    collection = Loader.loadCollection(user, pass);
        }
        if (collection == null) {
            JOptionPane.showMessageDialog(this,
                    "Failed to connect to DB.\nEither the DB is down or the username/password is incorrect.");
            return;
        }
        else {
            game.setCollection(collection);
            pnlCardSelect.loadCollection(collection);
            pnlCardSelect.repaint();
        }
        if (connection.connect(server, port))
            pnlLogin.setVisible(false);
        else
            JOptionPane.showMessageDialog(this, "Failed to connect to server");
    }
    
    public void setRules(boolean open, boolean random, boolean same, boolean plus, boolean combo) {
        game.setRules(open, random, same, plus, combo);
        connection.sendRules(open, random, same, plus, combo);
        pnlRules.setVisible(false);
        if (random) {
            game.setRandom();
        }
        else {
            pnlCardSelect.setVisible(true);
        }
    }
    
    public void addCard(int index) {
        game.addCard(index);
    }
    
    public void removeCard() {
        game.removeCard();
    }
    
    public void setCards() {
        pnlCardSelect.setVisible(false);
        game.setCards();
    }
    
    public void rematch() {
        pnlRematch.setVisible(false);
        game.rematch();
        connection.sendRematch(1);
    }
    
    public void rules() {
        pnlRules.reset();
        pnlRematch.setVisible(false);
        game.rules();
        connection.sendRematch(2);
        
    }
    
    public void cards() {
        pnlRematch.setVisible(false);
        game.cards();
        connection.sendRematch(3);
    }
    
    public void quit() {
        connection.sendExit();
        System.exit(0);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private frames.pnlCardSelect pnlCardSelect;
    private frames.LoginPanel pnlLogin;
    private frames.RematchPanel pnlRematch;
    private frames.RulesPanel pnlRules;
    // End of variables declaration//GEN-END:variables
}
